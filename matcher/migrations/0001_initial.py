# Generated by Django 5.0.14 on 2025-06-27 01:04

import django.db.models.deletion
import matcher.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="JobListing",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("company_name", models.CharField(max_length=200)),
                ("job_title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("translated_description", models.TextField(blank=True, null=True)),
                ("application_url", models.URLField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=200, null=True)),
                ("industry", models.CharField(max_length=100)),
                ("flexibility", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "salary_range",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("level", models.CharField(blank=True, max_length=100, null=True)),
                ("reason_for_match", models.TextField(blank=True, null=True)),
                ("source", models.CharField(blank=True, max_length=50, null=True)),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(blank=True, max_length=40, null=True, unique=True),
                ),
                ("user_cv_text", models.TextField(blank=True, null=True)),
                (
                    "cv_file",
                    models.FileField(
                        blank=True, null=True, upload_to=matcher.models.user_cv_path
                    ),
                ),
                ("user_preferences_text", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobAnomalyAnalysis",
            fields=[
                (
                    "job_listing",
                    models.OneToOneField(
                        db_column="job_id",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        related_name="anomaly_analysis",
                        serialize=False,
                        to="matcher.joblisting",
                    ),
                ),
                ("analysis_data", models.JSONField()),
            ],
            options={
                "db_table": "job_anomaly_analysis",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MatchSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("skills_text", models.TextField()),
                ("user_preferences_text", models.TextField(blank=True, null=True)),
                (
                    "structured_user_profile_json",
                    models.JSONField(blank=True, null=True),
                ),
                ("matched_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SavedJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_applied", "Not Applied"),
                            ("applied", "Applied"),
                            ("interviewing", "Interviewing"),
                            ("offer_received", "Offer Received"),
                            ("rejected", "Rejected"),
                            ("accepted", "Accepted"),
                        ],
                        default="not_applied",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "job_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_instances",
                        to="matcher.joblisting",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "job_listing")},
            },
        ),
        migrations.CreateModel(
            name="CoverLetter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "saved_job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cover_letter",
                        to="matcher.savedjob",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomResume",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "job_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_resumes",
                        to="matcher.joblisting",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
                "unique_together": {("user", "job_listing")},
            },
        ),
        migrations.CreateModel(
            name="MatchedJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField(default=0)),
                ("reason", models.TextField(blank=True, null=True)),
                ("insights", models.TextField(blank=True, null=True)),
                ("tips", models.TextField(blank=True, null=True)),
                (
                    "job_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="matcher.joblisting",
                    ),
                ),
                (
                    "match_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matched_jobs",
                        to="matcher.matchsession",
                    ),
                ),
            ],
            options={
                "ordering": ["-score"],
                "unique_together": {("match_session", "job_listing")},
            },
        ),
    ]
